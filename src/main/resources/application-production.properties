spring.servlet.multipart.max-file-size=-1
spring.servlet.multipart.max-request-size=-1

spring.application.name=merchant
server.port=8082
server.servlet.contextPath=/merchant

jwt.secret=${JWT_SECRET:helloworld}
spring.data.mongodb.uri=mongodb+srv://localhost:27007/merchantdb?authSource=admin

freewayemi.admins=9028055113,9028055114
eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://discovery:8761/eureka}

juspay.host=
juspay.token=
juspay.merchant=
juspay.response.key=9025327DA72481CAF041FDE0C3030F

payment.deployment.env=dev
payment.transaction.url=https://staging.getpayment.com/payment/txn/

aws.access.key = example
aws.secret.key = example
aws.region = ap-south-2
aws.sns.arn = arn:aws:sns:example
aws.kms.arn = arn:aws:kms:example

fcm.server.key = example: example
aws.s3.bucket.name=staging-getpayment
aws.s3.secure.bucket.name=

payment.base.url=${payment_BASE_URL:https://test.getpayment.com}

vault.base.url=${VAULT_BASE_URL:http://vault:8083/vault}

#KarzaAPI
ENABLE_KARZA=no

#FIREBASE CONFIG
FIREBASE_BUCKET_NAME=payment-f76df.appspot.com
FIREBASE_BUCKET_URL=https://storage.googleapis.com/payment-f76df.appspot.com/
FIREBASE_PROJECT_ID=payment-f76df
FIREBASE_TYPE=service_account
FIREBASE_PRIVATE_KEY_ID=test-id
FIREBASE_PRIVATE_KEY=-----BEGIN PRIVATE KEY-----test-key
FIREBASE_CLIENT_EMAIL=test-email
FIREBASE_CLIENT_ID=test-id
FIREBASE_AUTH_URI=https://accounts.google.com/o/oauth2/auth
FIREBASE_TOKEN_URI=https://oauth2.googleapis.com/token
FIREBASE_AUTH_PROVIDER_X509_CERT_URL=https://www.googleapis.com/oauth2/v1/certs
FIREBASE_CLIENT_X509_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-kz4ow%40payment-f76df.iam.gserviceaccount.com

click2call.feature.enabled=
click2call.agent.mobile=
click2call.auth.token=
click2call.base.url=

axis.emi.pg.live=
kotak.emi.pg.live=

karza.base.url=
karza.gst.base.url=
karza.client.key=

aws.ses.from.email=${AWS_SES_FROM_EMAIL:emiops@getpayment.com}

hdfc.dc.emi.tenure.restriction.min.amount=${HDFC_DC_EMI_TENURE_RESTRICTION_MIN_AMOUNT:3000}
hdfc.dc.emi.tenure.restriction.max.amount=${HDFC_DC_EMI_TENURE_RESTRICTION_MAX_AMOUNT:5000}
hdfc.dc.emi.tenure.restriction.dynamic.tenure=${HDFC_DC_EMI_TENURE_RESTRICTION_DYNAMIC_TENURE:3}
hdfc.payment.provider.tenure.restriction.enable=${HDFC_PAYMENT_PROVIDER_TENURE_RESTRICTION_ENABLE:false}

kotak.dc.emi.tenure.restriction.min.amount.3k=${KOTAK_DC_EMI_TENURE_RESTRICTION_MIN_AMOUNT_3K:3000}
kotak.dc.emi.tenure.restriction.max.amount.5k=${KOTAK_DC_EMI_TENURE_RESTRICTION_MAX_AMOUNT_5K:5000}
kotak.dc.emi.tenure.restriction.dynamic.tenure.3k.to.5k=${KOTAK_DC_EMI_TENURE_RESTRICTION_DYNAMIC_TENURE_3K_TO_5K:3}
kotak.dc.emi.tenure.restriction.min.amount.5k=${KOTAK_DC_EMI_TENURE_RESTRICTION_MIN_AMOUNT_5K:5000}
kotak.dc.emi.tenure.restriction.max.amount.8k=${KOTAK_DC_EMI_TENURE_RESTRICTION_MAX_AMOUNT_8K:8000}
kotak.dc.emi.tenure.restriction.dynamic.tenure.5k.to.8k=${KOTAK_DC_EMI_TENURE_RESTRICTION_DYNAMIC_TENURE_5K_TO_8K:3,6}
kotak.payment.provider.tenure.restriction.enable=${KOTAK_PAYMENT_PROVIDER_TENURE_RESTRICTION_ENABLE:false}

payment.secret.key=${payment_SECRET_KEY:test-key}

non.partner.brand.enable=${NON_PARTNER_BRAND_ENABLE:false}

webengage.base.url=${WEBENGAGE_BASE_URL:https://api.in.webengage.com/v1/accounts/}
webengage.consumer.license.code=${WEBENGAGE_CONSUMER_LICENSE_CODE:test}
webengage.consumer.auth.token=${WEBENGAGE_CONSUMER_AUTH_TOKEN:test}
webengage.merchant.license.code=${WEBENGAGE_MERCHANT_LICENSE_CODE:test}
webengage.merchant.auth.token=${WEBENGAGE_MERCHANT_AUTH_TOKEN:test}

spring.thymeleaf.prefix=${SPRING_THYMELEAF_PREFIX:classpath:/templates/}
spring.thymeleaf.suffix=${SPRING_THYMELEAF_SUFFIX:.html}

spring.mustache.prefix=${SPRING_MUSTACHE_PREFIX:classpath:/templates/}
spring.mustache.suffix=${SPRING_MUSTACHE_SUFFIX:.html}

icici.cardless.emi.pg.live=

offer.default.tenure = 3,6,9,12,18,24
offer.filter.pre.approved.banks = UTIB,HDFC,KKBK,ICIC,CL_ICICI

merchant.dashboard.api.keys=${MERCHANT_DASHBOARD_API_KEYS:test}
merchant.dashboard.auth.keys=${MERCHANT_DASHBOARD_AUTH_KEYS:test}
merchant.dashboard.validation.enabled=${MERCHANT_DASHBOARD_VALIDATION_ENABLED:true}

iifl.emi.pg.live=

disable.online.merchant.display.ids=${DISABLE_ONLINE_MERCHANT_DISPLAY_IDS:10587,33799,34145}

# Eligibility Service
eligibility.service.api.base.url=${ELIGIBILITY_SERVICE_API_BASE_URL:http://internal-eligibility-609601794.ap-south-1.elb.amazonaws.com/eligibility}
eligibility.service.discovery.base.url=${ELIGIBILITY_SERVICE_DISCOVERY_BASE_URL:http://eligibilityms:9001/eligibility}
is.eligibility.service.call.via.discovery=${IS_ELIGIBILITY_SERVICE_CALL_VIA_DISCOVERY:true}
eligibility.service.eligibility.check.url=${ELIGIBILITY_SERVICE_ELIGIBILITY_CHECK_URL:/internal/api/v1/eligibilities}
eligibility.service.api.enable=${ELIGIBILITY_SERVICE_API_ENABLE:true}
eligibility.api.key=test
eligibility.auth.key=test

instant.cashback.enabled=${INSTANT_CASHBACK_ENABLED:true}

# logs or logger configuration
logging.level.org.springframework=INFO
logging.level.com.freewayemi=INFO
logging.file.max-size=10MB
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss:SS} - [%t] [%level] [%X{sessionId}] %logger{36}[%L] - %msg%n
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss:SS} - [%t] [%level] [%X{sessionId}] %logger{36}[%L] - %msg%n
logging.file=/var/log/payment/merchant-${server.port}.log

digitalidentity.base.url=http://digitalidentityservicems/digitalidentityservice
digitalidentity.api.key=test
digitalidentity.auth.key=test
digitalidentity.source = Internal

payment.payment.url=http://paymentms/payment
payment.ntbcore.url=http://ntbcorems/ntbcore
payment.paymentops.url = http://paymentops/paymentops

payment.report.url=http://reportms/report
payment.report.api-key = test
payment.report.auth-key = test
payment.report.source = Internal

payment.audit.url=http://auditms/audit
payment.audit.api-key = o9yy7c2w-7076-4597-ae38-e2f9r752f66i
payment.audit.auth-key = pBplklG4s98DGqSnd6Bre4pi1
payment.audit.source = Internal

CONCURRENT_LOGIN_SESSIONS_ALLOWED = false

x.api.key=test
x.auth.key=test

payment.sales.url=http://salesms/sales/api/v1
sales.auth.key=test
sales.api.key=test

payment.ntbservices.url=http://ntbservices:8095/ntbservices/internal/api/v1/
ntbservices.auth.key=test
ntbservices.api.key = test

mobile.rule.engine.url=http://mobileruleengine/rule
mobile.rule.engine.api.key=a594681c1beea492199068ccb4c58a36d
mobile.rule.engine.auth.key=88cfd8c41ece42959aae01640b4b7386

convenience.fee.cutoff.transaction.amount=${CONVENIENCE_FEE_CUTOFF_TRANSACTION_AMOUNT:27500}
convenience.flat.fee.for.amount.less.than.cutoff.amount=${CONVENIENCE_FLAT_FEE_FOR_AMOUNT_LESS_THAN_CUTOFF_AMOUNT:299}
convenience.flat.fee.for.amount.more.than.cutoff.amount=${CONVENIENCE_FLAT_FEE_FOR_AMOUNT_MORE_THAN_CUTOFF_AMOUNT:399}

# eureka client configurations
eureka.client.healthcheck.enabled=true
eureka.client.lease.duration=2
eureka.instance.lease-renewal-interval-in-seconds=2
eureka.instance.lease-expiration-duration-in-seconds=2
eureka.instance.statusPageUrlPath=${server.servlet.contextPath}/info
eureka.instance.healthCheckUrlPath=${server.servlet.contextPath}/health

redis.hostname=localhost
redis.port=6379
redis.prefix=staging-payment
redis.sslEnabled=${REDIS_SSLENABLED:true}
redis-key-ttl=86400
redis.cluster.mode=${REDIS_CLUSTER_MODE:false}

consumer.api.key=test
consumer.auth.key=test

paymentops.api.key=test
paymentops.auth.key=test

api.call.via.discovery = true

payment.polling.interval=5